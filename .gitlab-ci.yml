services:
  - docker:dind

variables:
  BUILD_DOCKERFILE: build.dockerfile
  IMAGE_NAME: registry.gitlab.com/tokend/client-scaffold
  IMAGE_BUILD_NAME: $IMAGE_NAME:$CI_COMMIT_SHA

stages:
  - build
  - testing
  - staging
  - production

## build stage
build:
  stage: build
  tags: 
    - tokend
  script:
    - echo "Build"

## testing stage
test unit:
  stage: testing
  tags: [deploy]
  script:
    - echo "test unit"

test integration:
  stage: testing
  tags: 
    - tokend
  script:
    - echo "test integration"

test selenium:
  stage: testing
  tags: 
    - tokend
  script:
    - echo "test selenium"

## staging stage
.staging-deploy: &staging-deploy
  tags: 
    - tokend
  stage: staging
  when: manual
  script:
    - echo $CI_BUILD_NAME


deploy to dev:
  <<: *staging-deploy

deploy to devops:
  <<: *staging-deploy

deploy to qa:
  <<: *staging-deploy

## production stage
deploy to production:
  stage: production
  tags: 
    - tokend
  when: manual
  script:
    - echo "deploy to production!"

# build:
#   image: docker:latest
#   stage: build
#   tags:
#     - tokend
#   only:
#     - master
#   script:
#     # TODO check env files exists first
#     # login to docker registry
#     - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
#     - docker build --build-arg RSA_KEY="$SSH_PRIVATE_KEY" --build-arg BUILD_ENV=config/$CI_COMMIT_REF_NAME.env.js --pull -t $IMAGE_BUILD_NAME .
#     - docker push $IMAGE_BUILD_NAME
